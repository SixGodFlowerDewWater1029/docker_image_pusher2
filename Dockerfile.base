# 基于当前的资源文件创建的基础镜像
FROM eclipse-temurin:17.0.13_11-jdk

# 复制所需文件
COPY arthas-4.0.4.deb /tmp/
COPY lsmod_install.tar.gz postgresql-16.1.tar.gz /opt/

# 安装必要软件并配置系统
RUN set -ex \
    && curl -fsSL https://deb.nodesource.com/setup_16.x | bash \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        busybox \
        dmidecode \
        dnsutils \
        fonts-dejavu \
        iputils-ping \
        iproute2 \
        netcat \
        nodejs \
        openssh-client \
        openssh-server \
        rsync \
        tcpdump \
        tzdata \
        zip \
    # 安装Arthas
    && dpkg -i /tmp/arthas-4.0.4.deb \
    && rm -f /tmp/arthas-4.0.4.deb \
    # 解压并安装lsmod和PostgreSQL
    && cd /opt \
    && tar xzf lsmod_install.tar.gz \
    && tar xzf postgresql-16.1.tar.gz \
    && rm -f lsmod_install.tar.gz postgresql-16.1.tar.gz \
    && cd /opt/lsmod_install && ./install.sh \
    # 清理安装缓存
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    # 创建符号链接
    && ln -s /usr/bin/busybox /usr/bin/vi \
    && ln -s /usr/bin/busybox /usr/bin/less \
    && ln -s /usr/bin/busybox /usr/bin/ip \
    && ln -s /usr/bin/busybox /usr/bin/ifconfig \
    # 设置时区
    && cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    && echo "Asia/Shanghai" > /etc/timezone \
    # 配置SSH
    && mkdir /var/run/sshd \
    && echo 'root:!#D4WGdmVorxgJ' | chpasswd \
    && sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config \
    && sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config \
    # 创建应用目录结构
    && mkdir -p /opt/saas/bin /opt/saas/lib /opt/saas/config /opt/saas/logs /opt/saas/data /opt/saas/extensions

# 设置环境变量
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/lib64:/opt/pgsql/lib
ENV APP_HOME=/opt/saas
ENV APP_NAME=app.jar
ENV APP_ARGS=""
ENV APP_PORT=8080
ENV JAVA_OPTS="-Xms512m -Xmx1024m"

# 创建灵活的启动脚本
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
# 导出环境变量\n\
export JAVA_HOME=/opt/java/openjdk\n\
export PATH=${JAVA_HOME}/bin:${PATH}\n\
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/lib64:/opt/pgsql/lib\n\
alias tailf="tail -f"\n\
\n\
# 验证Java命令是否可用\n\
if ! command -v java &> /dev/null; then\n\
    echo "错误: Java命令未找到，请检查JAVA_HOME和PATH环境变量"\n\
    echo "当前JAVA_HOME: $JAVA_HOME"\n\
    echo "当前PATH: $PATH"\n\
    exit 1\n\
fi\n\
\n\
java -version\n\
echo "Java环境已就绪"\n\
\n\
# 检查是否需要启动应用\n\
if [ -f "${APP_HOME}/bin/${APP_NAME}" ]; then\n\
    echo "Starting application: ${APP_NAME} with args: ${APP_ARGS}"\n\
    # 启动应用并在后台运行\n\
    cd ${APP_HOME}/bin\n\
    java ${JAVA_OPTS} -jar ${APP_NAME} ${APP_ARGS} > ${APP_HOME}/logs/app.log 2>&1 &\n\
fi\n\
\n\
# 启动SSH服务\n\
echo "Starting SSH service..."\n\
/usr/sbin/sshd\n\
echo "SSH service started"\n\
\n\
# 使用tail -f /dev/null保持容器运行\n\
echo "Container is running, use docker exec to interact with it"\n\
tail -f /dev/null' > /start.sh \
    && chmod +x /start.sh

# 设置工作目录
WORKDIR /opt/saas

# 暴露SSH端口和应用端口（可在构建时覆盖）
EXPOSE 22 ${APP_PORT}

# 启动服务
CMD ["/start.sh"]

# 使用说明
# 1. 添加应用JAR文件到/opt/saas/bin目录，可自定义名称（通过APP_NAME环境变量）
# 2. 自定义应用运行参数（通过APP_ARGS环境变量）
# 3. 自定义应用端口（通过APP_PORT环境变量）
# 4. 可添加额外的包到/opt/saas/lib或/opt/saas/extensions目录
# 5. 配置文件可放在/opt/saas/config目录
# 6. 日志输出到/opt/saas/logs目录
# 7. 数据文件可存储在/opt/saas/data目录
# 8. 可通过JAVA_OPTS环境变量自定义JVM参数