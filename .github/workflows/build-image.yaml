name: build-image

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"
  GO_VERSION: 1.17
  CGO_ENABLED: 0
  GO111MODULE: on

jobs:

  build:
    name: Pull
    runs-on: ubuntu-latest
    steps:
    - name: Before freeing up disk space
      run: |
        echo "Before freeing up disk space"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="

    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: false
        dotnet: true
        haskell: true
        large-packages: false
        docker-images: false
        swap-storage: false

    - name: Restart docker
      run: sudo service docker restart

    - name: Free up disk space complete
      run: |
        echo "Free up disk space complete"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="

    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3

    - name: SetVariable
      run: |
        while IFS= read -r line || [ -n "$line" ]; do
          echo "RESOURCE_URL=$line"
          # 如果$line是FROM开头，则是构建Docker镜像的任务
          if [[ "$line" == FROM* ]]; then
              echo "build_image=true" >> "$GITHUB_ENV" 
          else
              echo "build_image=false" >> "$GITHUB_ENV"
          fi
          break
        done < resources.txt

# 是否推送到阿里云仓库
    - name: Build and push image Aliyun
      if: ${{env.build_image == 'true' }}
      run: |
        docker login -u $ALIYUN_REGISTRY_USER -p $ALIYUN_REGISTRY_PASSWORD $ALIYUN_REGISTRY
        image=eclipse-temurin:17.0.13_11-jdk-ssh
        mv resources.txt Dockerfile
        cat Dockerfile
        docker build -t $image .

        name_space_prefix=""
        # 将@sha256:等字符删除
        
        new_image="$ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/$name_space_prefix$image"
        echo "docker tag $image $new_image"
        docker tag $image $new_image
        echo "docker push $new_image"
        docker push $new_image
        echo "开始清理磁盘空间"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="
        docker rmi $image
        docker rmi $new_image
        echo "磁盘空间清理完毕"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="
